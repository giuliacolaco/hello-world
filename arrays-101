In Java, you can create an array by declaring a variable of the desired type followed by square brackets [] and then specifying the size of the array 
in parentheses:

type[] arrayName = new type[size];

For example, to create an array of integers with a size of 5, you can write:

int[] numbers = new int[5];

This creates an array of integers named numbers with a size of 5. The elements of the array are initialized to 0 by default.
You can also initialize the array with values using an array initializer. For example, to create an array of integers with 
values 1, 2, 3, 4, and 5, you can write:

int[] numbers = {1, 2, 3, 4, 5};

This creates an array of integers named numbers with a size of 5 and initializes its elements with the values 1, 2, 3, 4, and 5.
You can access individual elements of the array using their indices, which start from 0. For example, to access the third element 
of the numbers array, you can write:

int thirdNumber = numbers[2];

This assigns the value of the third element (index 2) of the numbers array to the variable thirdNumber.
You can traverse (i.e., loop through) an array in Java using a for loop or a for-each loop.
Using a for loop, you can loop through the array by iterating over its indices, which start from 0 and go up to the length of 
the array minus one. For example, to loop through an array of integers named numbers, you can write:

for (int i = 0; i < numbers.length; i++) {
    int number = numbers[i];
    // Do something with the number
}

In this loop, the index variable i starts from 0 and goes up to numbers.length - 1. In each iteration, the value of the element at 
index i is assigned to the variable number, and you can perform some operation on number inside the loop.

Using a for-each loop, you can loop through the array by iterating over its elements directly. For example, to loop through the 
same array of integers numbers, you can write:

for (int number : numbers) {
    // Do something with the number
}

In this loop, the variable number is assigned the value of each element of the numbers array in turn, and you can perform some 
operation on number inside the loop. Both of these methods are useful for different situations, and the choice between them depends
on the specific requirements of your program.

Here's a Java program that creates an integer array with 10 elements and prints all of their values:

public class PrintArray {
    public static void main(String[] args) {
        int[] numbers = {2, 4, 6, 8, 10, 12, 14, 16, 18, 20};
        for (int i = 0; i < numbers.length; i++) {
            System.out.println(numbers[i]);
        }
    }
}

------------------------------------------------------------------------------------------------------------------------------------
Exercises

1 - Write a Java program that creates an array of integers and initializes it with the values 1, 2, 3, 4, 5, 6, 7, 8, 9, and 10. 
Then, print the values in reverse order.

2 - Write a Java program that creates an array of doubles and initializes it with the values 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 
and 10.10. Then, compute the average of the values and print it.

3 - Write a Java program that creates an array of strings and initializes it with the names of five of your favorite fruits. 
Then, prompt the user to enter a fruit name and search the array for that fruit. If the fruit is found, print "Found!" Otherwise, print "Not found."

4 - Write a Java program that creates an array of integers and initializes it with random values between 1 and 100. 
Then, prompt the user to enter a number and search the array for that number. If the number is found, print its index in the array. Otherwise, print "Not found."

5 - Write a Java program that creates an array of integers and initializes it with the values 1, 2, 3, 4, 5, 6, 7, 8, 9, and 10. 
Then, create a second array of integers with the same length as the first array and copy the values from the first array into the 
second array in reverse order. Finally, print the values in the second array.

6 - Write a Java program that creates an array of integers and initializes it with random values between 1 and 100. 
Then, sort the array in ascending order and print the sorted values.

7 - Write a Java program that creates an array of integers and initializes it with random values between 1 and 100. 
Then, compute the sum of the values and print it.

8 - Write a Java program that creates an array of integers and initializes it with random values between 1 and 100. 
Then, compute the average of the values and print it.

9 - Write a Java program that creates an array of integers and initializes it with random values between 1 and 100. 
Then, find the minimum and maximum values in the array and print them.

10 - Write a Java program that creates an array of integers and initializes it with random values between 1 and 100. 
Then, compute the median of the values and print it.
